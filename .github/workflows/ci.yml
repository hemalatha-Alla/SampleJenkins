pipeline {
    agent { label 'ubuntu-latest' }  // Agent on which the pipeline will run (e.g., Ubuntu)

    triggers {
        pollSCM('* * * * *')  // Trigger pipeline when there's a push (you can customize the cron)
    }

    stages {
        stage('Checkout Code') {
            steps {
                checkout([$class: 'GitSCM', branches: [[name: '']],
                          userRemoteConfigs: [[url: 'YOUR_REPOSITORY_URL']]])  // Replace with your repo URL
            }
        }

        stage('List Directory Contents') {
            steps {
                sh 'ls -R'  // Recursively list the contents of the directory
            }
        }

        stage('Print Working Directory') {
            steps {
                sh 'pwd'  // Print the current working directory
            }
        }

        stage('Print POM.xml Contents') {
            steps {
                sh 'cat POM.xml'  // Print the contents of the POM.xml file
            }
        }

        stage('Build with Maven') {
            steps {
                sh 'mvn clean install -X'  // Build with Maven in debug mode
            }
        }

        stage('Run Tests with Maven') {
            steps {
                sh 'mvn test'  // Run tests with Maven
 }
        }
    }

    post {
        always {
            echo 'Cleaning up...'
        }

        success {
            echo 'Pipeline completed successfully!'
        }

        failure {
            echo 'Pipeline failed!'
        }
    }
}
